{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SONA\\\\OneDrive\\\\Desktop\\\\Mini Project\\\\mediq\\\\frontend\\\\src\\\\components\\\\UserProfile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./UserProfile.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserProfile() {\n  _s();\n  var _user$address, _user$address2, _user$address3, _user$address4;\n  const navigate = useNavigate();\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const [open, setOpen] = useState({\n    personal: true,\n    address: false,\n    health: false,\n    prefs: false,\n    security: false\n  });\n  const toggleSection = key => setOpen(prev => ({\n    ...prev,\n    [key]: !prev[key]\n  }));\n  const handleLogout = () => {\n    localStorage.removeItem(\"user\");\n    navigate(\"/login\");\n  };\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-alert\",\n        children: \"User not logged in.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"profile-title\",\n      children: \"\\uD83D\\uDC64 My Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-card\",\n      children: [[{\n        key: \"personal\",\n        title: \"Personal Information\",\n        fields: [{\n          label: \"Name\",\n          value: user.name\n        }, {\n          label: \"Email\",\n          value: user.email\n        }, {\n          label: \"Phone\",\n          value: user.phone\n        }, {\n          label: \"Date of Birth\",\n          value: user.dob\n        }, {\n          label: \"Gender\",\n          value: user.gender\n        }]\n      }, {\n        key: \"address\",\n        title: \"Address\",\n        fields: [{\n          label: \"Street\",\n          value: (_user$address = user.address) === null || _user$address === void 0 ? void 0 : _user$address.street\n        }, {\n          label: \"City\",\n          value: (_user$address2 = user.address) === null || _user$address2 === void 0 ? void 0 : _user$address2.city\n        }, {\n          label: \"State\",\n          value: (_user$address3 = user.address) === null || _user$address3 === void 0 ? void 0 : _user$address3.state\n        }, {\n          label: \"Pincode\",\n          value: (_user$address4 = user.address) === null || _user$address4 === void 0 ? void 0 : _user$address4.pincode\n        }]\n      }, {\n        key: \"health\",\n        title: \"Health Information\",\n        fields: [{\n          label: \"Allergies\",\n          value: user.allergies\n        }, {\n          label: \"Current Medications\",\n          value: user.currentMedications\n        }, {\n          label: \"Chronic Conditions\",\n          value: user.chronicConditions\n        }]\n      }, {\n        key: \"prefs\",\n        title: \"Preferences\",\n        fields: [{\n          label: \"Communication\",\n          value: user.communicationPref\n        }, {\n          label: \"Refill Reminders\",\n          value: user.refillReminders ? \"Enabled\" : \"Disabled\"\n        }]\n      }, {\n        key: \"security\",\n        title: \"Account Security\",\n        fields: [{\n          label: \"Role\",\n          value: user.role\n        }, {\n          label: \"Two-Factor Auth\",\n          value: user.twoFactor ? \"Enabled\" : \"Disabled\"\n        }]\n      }].map(section => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"section-heading clickable\",\n          onClick: () => toggleSection(section.key),\n          children: section.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), open[section.key] && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-body\",\n          children: section.fields.map((field, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"profile-label\",\n              children: field.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"profile-value\",\n              children: field.value || \"â€”\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this)]\n      }, section.key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-btn\",\n        onClick: handleLogout,\n        children: \"\\uD83D\\uDD13 Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(UserProfile, \"ZyKLZE1TGHbPYs+JwkgZJKGB4G4=\", false, function () {\n  return [useNavigate];\n});\n_c = UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","UserProfile","_s","_user$address","_user$address2","_user$address3","_user$address4","navigate","user","JSON","parse","localStorage","getItem","open","setOpen","personal","address","health","prefs","security","toggleSection","key","prev","handleLogout","removeItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","fields","label","value","name","email","phone","dob","gender","street","city","state","pincode","allergies","currentMedications","chronicConditions","communicationPref","refillReminders","role","twoFactor","map","section","onClick","field","index","_c","$RefreshReg$"],"sources":["C:/Users/SONA/OneDrive/Desktop/Mini Project/mediq/frontend/src/components/UserProfile.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./UserProfile.css\";\r\n\r\nexport default function UserProfile() {\r\n  const navigate = useNavigate();\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n  const [open, setOpen] = useState({\r\n    personal: true,\r\n    address: false,\r\n    health: false,\r\n    prefs: false,\r\n    security: false,\r\n  });\r\n\r\n  const toggleSection = (key) =>\r\n    setOpen((prev) => ({ ...prev, [key]: !prev[key] }));\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"user\");\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  if (!user) {\r\n    return (\r\n      <div className=\"profile-container\">\r\n        <div className=\"profile-alert\">User not logged in.</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"profile-container\">\r\n      <h2 className=\"profile-title\">ðŸ‘¤ My Profile</h2>\r\n\r\n      <div className=\"profile-card\">\r\n        {/* Section Generator */}\r\n        {[\r\n          {\r\n            key: \"personal\",\r\n            title: \"Personal Information\",\r\n            fields: [\r\n              { label: \"Name\", value: user.name },\r\n              { label: \"Email\", value: user.email },\r\n              { label: \"Phone\", value: user.phone },\r\n              { label: \"Date of Birth\", value: user.dob },\r\n              { label: \"Gender\", value: user.gender },\r\n            ],\r\n          },\r\n          {\r\n            key: \"address\",\r\n            title: \"Address\",\r\n            fields: [\r\n              { label: \"Street\", value: user.address?.street },\r\n              { label: \"City\", value: user.address?.city },\r\n              { label: \"State\", value: user.address?.state },\r\n              { label: \"Pincode\", value: user.address?.pincode },\r\n            ],\r\n          },\r\n          {\r\n            key: \"health\",\r\n            title: \"Health Information\",\r\n            fields: [\r\n              { label: \"Allergies\", value: user.allergies },\r\n              { label: \"Current Medications\", value: user.currentMedications },\r\n              { label: \"Chronic Conditions\", value: user.chronicConditions },\r\n            ],\r\n          },\r\n          {\r\n            key: \"prefs\",\r\n            title: \"Preferences\",\r\n            fields: [\r\n              { label: \"Communication\", value: user.communicationPref },\r\n              {\r\n                label: \"Refill Reminders\",\r\n                value: user.refillReminders ? \"Enabled\" : \"Disabled\",\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            key: \"security\",\r\n            title: \"Account Security\",\r\n            fields: [\r\n              { label: \"Role\", value: user.role },\r\n              {\r\n                label: \"Two-Factor Auth\",\r\n                value: user.twoFactor ? \"Enabled\" : \"Disabled\",\r\n              },\r\n            ],\r\n          },\r\n        ].map((section) => (\r\n          <div key={section.key} className=\"profile-section\">\r\n            <h3\r\n              className=\"section-heading clickable\"\r\n              onClick={() => toggleSection(section.key)}\r\n            >\r\n              {section.title}\r\n            </h3>\r\n            {open[section.key] && (\r\n              <div className=\"section-body\">\r\n                {section.fields.map((field, index) => (\r\n                  <div key={index} className=\"profile-item\">\r\n                    <span className=\"profile-label\">{field.label}</span>\r\n                    <span className=\"profile-value\">\r\n                      {field.value || \"â€”\"}\r\n                    </span>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n\r\n        <button className=\"logout-btn\" onClick={handleLogout}>\r\n          ðŸ”“ Logout\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}