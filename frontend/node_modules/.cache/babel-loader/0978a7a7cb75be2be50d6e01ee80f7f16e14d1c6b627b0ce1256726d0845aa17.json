{"ast":null,"code":"// import React, { useEffect, useState } from \"react\";\n// import axios from \"axios\";\n// import { Navigate } from \"react-router-dom\";\n\n// function PharmacistDashboard({ user }) {\n//   const [prescriptions, setPrescriptions] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [unauthorized, setUnauthorized] = useState(false);\n//   const [actionLoading, setActionLoading] = useState(null);\n//   const [showMedicineForm, setShowMedicineForm] = useState(false);\n\n//   useEffect(() => {\n//     const fetchPrescriptions = async () => {\n//       if (!user || user.role !== \"pharmacist\") {\n//         setUnauthorized(true);\n//         setLoading(false);\n//         return;\n//       }\n\n//       try {\n//         const res = await axios.get(\"/api/prescriptions\");\n//         const pending = res.data.filter(p => p.status === \"pending\");\n//         setPrescriptions(pending);\n//       } catch (err) {\n//         console.error(\"Error fetching prescriptions:\", err);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchPrescriptions();\n//   }, [user]);\n\n//   const handleAction = async (id, action) => {\n//     setActionLoading(id);\n//     try {\n//       await axios.patch(`/api/prescriptions/${id}/${action}`, {\n//         reviewedBy: user._id,\n//         notes: `Marked as ${action} by ${user.name}`\n//       });\n\n//       const res = await axios.get(\"/api/prescriptions\");\n//       const pending = res.data.filter(p => p.status === \"pending\");\n//       setPrescriptions(pending);\n//     } catch (err) {\n//       console.error(`Error during ${action}:`, err);\n//       alert(err.response?.data?.message || `Failed to ${action} prescription.`);\n//     } finally {\n//       setActionLoading(null);\n//     }\n//   };\n\n//   const handleMedicineUpload = async (e) => {\n//     e.preventDefault();\n//     const form = e.target;\n//     const formData = new FormData();\n\n//     formData.append(\"name\", form.name.value);\n//     formData.append(\"category\", form.category.value);\n//     formData.append(\"price\", form.price.value);\n//     formData.append(\"stock\", form.stock.value);\n//     formData.append(\"dosage\", form.dosage.value);\n//     formData.append(\"symptoms\", form.symptoms.value);\n//     formData.append(\"description\", form.description.value);\n//     formData.append(\"prescriptionRequired\", form.prescriptionRequired.value);\n//     formData.append(\"image\", form.image.files[0]);\n\n//     try {\n//       await axios.post(\"/api/medicines\", formData);\n//       alert(\"‚úÖ Medicine uploaded successfully!\");\n//       form.reset();\n//     } catch (err) {\n//       console.error(\"Medicine upload failed:\", err);\n//       alert(\"‚ùå Failed to upload medicine.\");\n//     }\n//   };\n\n//   if (unauthorized) {\n//     return <Navigate to=\"/unauthorized\" />;\n//   }\n\n//   return (\n//     <div className=\"container my-5\">\n//       {/* üß≠ Navbar */}\n//       <div className=\"d-flex justify-content-between align-items-center mb-4\">\n//         <h2 className=\"text-success\">üßë‚Äç‚öïÔ∏è Pharmacist Dashboard</h2>\n//         <div>\n//           <button\n//             className={`btn btn-outline-${showMedicineForm ? \"secondary\" : \"primary\"} me-2`}\n//             onClick={() => setShowMedicineForm(false)}\n//           >\n//             üìÑ View Prescriptions\n//           </button>\n//           <button\n//             className={`btn btn-outline-${showMedicineForm ? \"primary\" : \"secondary\"}`}\n//             onClick={() => setShowMedicineForm(true)}\n//           >\n//             üíä Upload Medicine\n//           </button>\n//         </div>\n//       </div>\n\n//       {/* üíä Medicine Upload Form */}\n//       {showMedicineForm ? (\n//         <form onSubmit={handleMedicineUpload} className=\"card p-4 shadow-sm\">\n//           <h4 className=\"mb-3 text-primary\">Add New Medicine</h4>\n//           <div className=\"row g-3\">\n//             <div className=\"col-md-6\">\n//               <input type=\"text\" name=\"name\" className=\"form-control\" placeholder=\"Medicine Name\" required />\n//             </div>\n//             <div className=\"col-md-6\">\n//               <input type=\"text\" name=\"category\" className=\"form-control\" placeholder=\"Category\" required />\n//             </div>\n//             <div className=\"col-md-4\">\n//               <input type=\"number\" name=\"price\" className=\"form-control\" placeholder=\"Price\" required />\n//             </div>\n//             <div className=\"col-md-4\">\n//               <input type=\"number\" name=\"stock\" className=\"form-control\" placeholder=\"Stock\" required />\n//             </div>\n//             <div className=\"col-md-4\">\n//               <input type=\"text\" name=\"dosage\" className=\"form-control\" placeholder=\"Dosage\" required />\n//             </div>\n//             <div className=\"col-md-12\">\n//               <input type=\"text\" name=\"symptoms\" className=\"form-control\" placeholder=\"Symptoms (comma-separated)\" required />\n//             </div>\n//             <div className=\"col-md-12\">\n//               <textarea name=\"description\" className=\"form-control\" placeholder=\"Description\" rows=\"3\" required />\n//             </div>\n//             <div className=\"col-md-6\">\n//               <select name=\"prescriptionRequired\" className=\"form-select\">\n//                 <option value=\"Required\">Prescription Required</option>\n//                 <option value=\"Not Required\">No Prescription</option>\n//               </select>\n//             </div>\n//             <div className=\"col-md-6\">\n//               <input type=\"file\" name=\"image\" className=\"form-control\" accept=\"image/*\" required />\n//             </div>\n//           </div>\n//           <button type=\"submit\" className=\"btn btn-success mt-4 w-100\">Upload Medicine</button>\n//         </form>\n//       ) : (\n//         // üìÑ Prescription Table\n//         <>\n//           {loading ? (\n//             <p>Loading prescriptions...</p>\n//           ) : prescriptions.length === 0 ? (\n//             <div className=\"alert alert-info\">No pending prescriptions.</div>\n//           ) : (\n//             <table className=\"table table-bordered table-hover\">\n//               <thead className=\"table-light\">\n//                 <tr>\n//                   <th>User</th>\n//                   <th>File Name</th>\n//                   <th>Original Name</th>\n//                   <th>Uploaded At</th>\n//                   <th>Status</th>\n//                   <th>Actions</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {prescriptions.map(p => (\n//                   <tr key={p._id}>\n//                     <td>\n//                       {typeof p.userId === \"object\" ? (\n//                         <>\n//                           <strong>{p.userId.name || \"Unnamed\"}</strong><br />\n//                           <small className=\"text-muted\">\n//                             User ID: {p.userId.userId || p.userId._id}\n//                           </small>\n//                         </>\n//                       ) : (\n//                         <span className=\"text-muted\">‚Äî</span>\n//                       )}\n//                     </td>\n//                     <td>{p.fileName || p.file || \"‚Äî\"}</td>\n//                     <td>{p.originalName || \"‚Äî\"}</td>\n//                     <td>{new Date(p.createdAt).toLocaleString()}</td>\n//                     <td>\n//                       <span className=\"badge bg-warning text-dark text-uppercase\">\n//                         {p.status}\n//                       </span>\n//                     </td>\n//                     <td>\n//                       <button\n//                         className=\"btn btn-success btn-sm me-2\"\n//                         disabled={actionLoading === p._id}\n//                         onClick={() => handleAction(p._id, \"approve\")}\n//                       >\n//                         {actionLoading === p._id ? \"Approving...\" : \"‚úÖ Approve\"}\n//                       </button>\n//                       <button\n//                         className=\"btn btn-danger btn-sm\"\n//                         disabled={actionLoading === p._id}\n//                         onClick={() => handleAction(p._id, \"reject\")}\n//                       >\n//                         {actionLoading === p._id ? \"Rejecting...\" : \"‚ùå Reject\"}\n//                       </button>\n//                     </td>\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n//           )}\n//         </>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default PharmacistDashboard;","map":{"version":3,"names":[],"sources":["C:/Users/SONA/OneDrive/Desktop/Mini Project/mediq/frontend/src/pages/PharmacistDashboard.jsx"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import { Navigate } from \"react-router-dom\";\r\n\r\n// function PharmacistDashboard({ user }) {\r\n//   const [prescriptions, setPrescriptions] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [unauthorized, setUnauthorized] = useState(false);\r\n//   const [actionLoading, setActionLoading] = useState(null);\r\n//   const [showMedicineForm, setShowMedicineForm] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     const fetchPrescriptions = async () => {\r\n//       if (!user || user.role !== \"pharmacist\") {\r\n//         setUnauthorized(true);\r\n//         setLoading(false);\r\n//         return;\r\n//       }\r\n\r\n//       try {\r\n//         const res = await axios.get(\"/api/prescriptions\");\r\n//         const pending = res.data.filter(p => p.status === \"pending\");\r\n//         setPrescriptions(pending);\r\n//       } catch (err) {\r\n//         console.error(\"Error fetching prescriptions:\", err);\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     fetchPrescriptions();\r\n//   }, [user]);\r\n\r\n//   const handleAction = async (id, action) => {\r\n//     setActionLoading(id);\r\n//     try {\r\n//       await axios.patch(`/api/prescriptions/${id}/${action}`, {\r\n//         reviewedBy: user._id,\r\n//         notes: `Marked as ${action} by ${user.name}`\r\n//       });\r\n\r\n//       const res = await axios.get(\"/api/prescriptions\");\r\n//       const pending = res.data.filter(p => p.status === \"pending\");\r\n//       setPrescriptions(pending);\r\n//     } catch (err) {\r\n//       console.error(`Error during ${action}:`, err);\r\n//       alert(err.response?.data?.message || `Failed to ${action} prescription.`);\r\n//     } finally {\r\n//       setActionLoading(null);\r\n//     }\r\n//   };\r\n\r\n//   const handleMedicineUpload = async (e) => {\r\n//     e.preventDefault();\r\n//     const form = e.target;\r\n//     const formData = new FormData();\r\n\r\n//     formData.append(\"name\", form.name.value);\r\n//     formData.append(\"category\", form.category.value);\r\n//     formData.append(\"price\", form.price.value);\r\n//     formData.append(\"stock\", form.stock.value);\r\n//     formData.append(\"dosage\", form.dosage.value);\r\n//     formData.append(\"symptoms\", form.symptoms.value);\r\n//     formData.append(\"description\", form.description.value);\r\n//     formData.append(\"prescriptionRequired\", form.prescriptionRequired.value);\r\n//     formData.append(\"image\", form.image.files[0]);\r\n\r\n//     try {\r\n//       await axios.post(\"/api/medicines\", formData);\r\n//       alert(\"‚úÖ Medicine uploaded successfully!\");\r\n//       form.reset();\r\n//     } catch (err) {\r\n//       console.error(\"Medicine upload failed:\", err);\r\n//       alert(\"‚ùå Failed to upload medicine.\");\r\n//     }\r\n//   };\r\n\r\n//   if (unauthorized) {\r\n//     return <Navigate to=\"/unauthorized\" />;\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"container my-5\">\r\n//       {/* üß≠ Navbar */}\r\n//       <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n//         <h2 className=\"text-success\">üßë‚Äç‚öïÔ∏è Pharmacist Dashboard</h2>\r\n//         <div>\r\n//           <button\r\n//             className={`btn btn-outline-${showMedicineForm ? \"secondary\" : \"primary\"} me-2`}\r\n//             onClick={() => setShowMedicineForm(false)}\r\n//           >\r\n//             üìÑ View Prescriptions\r\n//           </button>\r\n//           <button\r\n//             className={`btn btn-outline-${showMedicineForm ? \"primary\" : \"secondary\"}`}\r\n//             onClick={() => setShowMedicineForm(true)}\r\n//           >\r\n//             üíä Upload Medicine\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* üíä Medicine Upload Form */}\r\n//       {showMedicineForm ? (\r\n//         <form onSubmit={handleMedicineUpload} className=\"card p-4 shadow-sm\">\r\n//           <h4 className=\"mb-3 text-primary\">Add New Medicine</h4>\r\n//           <div className=\"row g-3\">\r\n//             <div className=\"col-md-6\">\r\n//               <input type=\"text\" name=\"name\" className=\"form-control\" placeholder=\"Medicine Name\" required />\r\n//             </div>\r\n//             <div className=\"col-md-6\">\r\n//               <input type=\"text\" name=\"category\" className=\"form-control\" placeholder=\"Category\" required />\r\n//             </div>\r\n//             <div className=\"col-md-4\">\r\n//               <input type=\"number\" name=\"price\" className=\"form-control\" placeholder=\"Price\" required />\r\n//             </div>\r\n//             <div className=\"col-md-4\">\r\n//               <input type=\"number\" name=\"stock\" className=\"form-control\" placeholder=\"Stock\" required />\r\n//             </div>\r\n//             <div className=\"col-md-4\">\r\n//               <input type=\"text\" name=\"dosage\" className=\"form-control\" placeholder=\"Dosage\" required />\r\n//             </div>\r\n//             <div className=\"col-md-12\">\r\n//               <input type=\"text\" name=\"symptoms\" className=\"form-control\" placeholder=\"Symptoms (comma-separated)\" required />\r\n//             </div>\r\n//             <div className=\"col-md-12\">\r\n//               <textarea name=\"description\" className=\"form-control\" placeholder=\"Description\" rows=\"3\" required />\r\n//             </div>\r\n//             <div className=\"col-md-6\">\r\n//               <select name=\"prescriptionRequired\" className=\"form-select\">\r\n//                 <option value=\"Required\">Prescription Required</option>\r\n//                 <option value=\"Not Required\">No Prescription</option>\r\n//               </select>\r\n//             </div>\r\n//             <div className=\"col-md-6\">\r\n//               <input type=\"file\" name=\"image\" className=\"form-control\" accept=\"image/*\" required />\r\n//             </div>\r\n//           </div>\r\n//           <button type=\"submit\" className=\"btn btn-success mt-4 w-100\">Upload Medicine</button>\r\n//         </form>\r\n//       ) : (\r\n//         // üìÑ Prescription Table\r\n//         <>\r\n//           {loading ? (\r\n//             <p>Loading prescriptions...</p>\r\n//           ) : prescriptions.length === 0 ? (\r\n//             <div className=\"alert alert-info\">No pending prescriptions.</div>\r\n//           ) : (\r\n//             <table className=\"table table-bordered table-hover\">\r\n//               <thead className=\"table-light\">\r\n//                 <tr>\r\n//                   <th>User</th>\r\n//                   <th>File Name</th>\r\n//                   <th>Original Name</th>\r\n//                   <th>Uploaded At</th>\r\n//                   <th>Status</th>\r\n//                   <th>Actions</th>\r\n//                 </tr>\r\n//               </thead>\r\n//               <tbody>\r\n//                 {prescriptions.map(p => (\r\n//                   <tr key={p._id}>\r\n//                     <td>\r\n//                       {typeof p.userId === \"object\" ? (\r\n//                         <>\r\n//                           <strong>{p.userId.name || \"Unnamed\"}</strong><br />\r\n//                           <small className=\"text-muted\">\r\n//                             User ID: {p.userId.userId || p.userId._id}\r\n//                           </small>\r\n//                         </>\r\n//                       ) : (\r\n//                         <span className=\"text-muted\">‚Äî</span>\r\n//                       )}\r\n//                     </td>\r\n//                     <td>{p.fileName || p.file || \"‚Äî\"}</td>\r\n//                     <td>{p.originalName || \"‚Äî\"}</td>\r\n//                     <td>{new Date(p.createdAt).toLocaleString()}</td>\r\n//                     <td>\r\n//                       <span className=\"badge bg-warning text-dark text-uppercase\">\r\n//                         {p.status}\r\n//                       </span>\r\n//                     </td>\r\n//                     <td>\r\n//                       <button\r\n//                         className=\"btn btn-success btn-sm me-2\"\r\n//                         disabled={actionLoading === p._id}\r\n//                         onClick={() => handleAction(p._id, \"approve\")}\r\n//                       >\r\n//                         {actionLoading === p._id ? \"Approving...\" : \"‚úÖ Approve\"}\r\n//                       </button>\r\n//                       <button\r\n//                         className=\"btn btn-danger btn-sm\"\r\n//                         disabled={actionLoading === p._id}\r\n//                         onClick={() => handleAction(p._id, \"reject\")}\r\n//                       >\r\n//                         {actionLoading === p._id ? \"Rejecting...\" : \"‚ùå Reject\"}\r\n//                       </button>\r\n//                     </td>\r\n//                   </tr>\r\n//                 ))}\r\n//               </tbody>\r\n//             </table>\r\n//           )}\r\n//         </>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default PharmacistDashboard;\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}